router:
  tenant-id: ${TENANT_ID:}
spring:
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration
  datasource:
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 10
    url: ${POSTGRES_JDBC}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
  jpa:
    properties:
      hibernate:
        c3p0:
          timeout: 30000
  application:
    name: event-router${TENANT_ID:}

  cloud:
    function:
      definition: routeDatabaseChangeEvent
  kafka:
    bootstrap-servers: ${KAFKA_BROKERS:localhost:9092}
    listener:
      type: single
      concurrency: 3
    consumer:
      group-id: event-router-tenant-${TENANT_ID:}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      properties:
        schema.registry.url: ${SCHEMA_REGISTRY_URL:http://localhost:8081}
        specific.avro.reader: true
encryption:
  require-data-encryption: true
  key: ${ENCRYPTION_KEY:}
springdoc:
  api-docs:
    path: /api-docs

